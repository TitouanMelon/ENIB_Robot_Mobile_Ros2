#include "main.h"

void createPublisher(rcl_publisher_t* publisher,
	const rcl_node_t* node,
	const rosidl_message_type_support_t* type_support,
	const char* topic_name,
	std_msgs__msg__String* msg)
{
	rcl_ret_t ret = rclc_publisher_init_default(publisher, node, type_support, topic_name);
	printf("Publisher %s is created with result %d\r\n", topic_name, (int)ret);

	msg.data.data = (char * ) malloc(ARRAY_LEN * sizeof(char));
	msg.data.size = 0;
	msg.data.capacity = ARRAY_LEN;

}

void createSubscriber(rcl_subscription_t* subscription,
	const rcl_node_t* node,
	const rosidl_message_type_support_t* type_support,
	const char* topic_name,
	const rcl_subscription_options_t* options,
	std_msgs__msg__String* msg)
{
	*subscription = rcl_get_zero_initialized_subscription();

	rcl_ret_t ret = rcl_subscription_init(subscription, node,
		type_support, topic_name, options);
	printf("Subscription %s is created with result %d\r\n", topic_name, (int)ret);

	msg.data.data = (char * ) malloc(ARRAY_LEN * sizeof(char));
	msg.data.size = 0;
	msg.data.capacity = ARRAY_LEN;
}
