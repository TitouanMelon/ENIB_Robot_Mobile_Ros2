#include "main.h"

void createPublisher(rcl_publisher_t* publisher,
	const rcl_node_t* node,
	const rosidl_message_type_support_t* type_support,
	const char* topic_name,
	std_msgs__msg__String* msg)
{
	ret = rclc_publisher_init_default(&capteur_dir_pub, &node,
	ROSIDL_GET_MSG_TYPE_SUPPORT(std_msgs, msg, String), capteur_dir_topic);
	printf("Publisher %s is created with result %d\r\n", capteur_dir_topic, ret);

	msg.data.data = (char * ) malloc(ARRAY_LEN * sizeof(char));
	msg.data.size = 0;
	msg.data.capacity = ARRAY_LEN;

}

void createSubscriber(rcl_subscription_t* subscription,
	const rcl_node_t* node,
	const rosidl_message_type_support_t* type_support,
	const char* topic_name,
	const rcl_subscription_options_t* options,
	std_msgs__msg__String* msg)
{

}
