#ifndef DEF_MICROROS
#define DEF_MICROROS

	#include "main.h"
	#define ARRAY_LEN 100

	typedef struct MicroRosPubMsg MicroRosPubMsg;
	struct MicroRosPubMsg
	{
		char dir;
		int mode;
		int speed;
		int isGood;
	};

	typedef struct MicroRosSubMsg MicroRosSubMsg;
	struct MicroRosSubMsg
	{
		int dir;
		int x;
		int y;
		int mode;
		int speed;
	};

	static void CHECKMRRET(rcl_ret_t ret, char* msg)
	{
		if (ret != RCL_RET_OK)
			printf("Error : %d\r\nMsg : %s\r\n", (int)ret, msg);
	}

	static void SubscriberStringCallbackFunction(const void *msgin)
	{
		std_msgs__msg__String * msg = (std_msgs__msg__String * )msgin;
		printf("Message recue : %s\r\n", msg->data.data);
	}

	static void SubscriberCallbackFunction(const void *msgin)
	{
		std_msgs__msg__Int32 * msg = (std_msgs__msg__Int32 * )msgin;
		printf("Message recue : %d\r\n", msg->data);
	}

	void createPublisher(rcl_publisher_t* publisher,
			  const rcl_node_t* node,
			  const rosidl_message_type_support_t* type_support,
			  const char* topic_name,
			  std_msgs__msg__Int32* msg);

	void createSubscriber(rcl_subscription_t* subscription,
			  const rcl_node_t* node,
			  const rosidl_message_type_support_t* type_support,
			  const char* topic_name,
			  std_msgs__msg__Int32* msg);

#endif //DEF_MICROROS
